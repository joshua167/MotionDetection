// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "abs_diff.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic abs_diff::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic abs_diff::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> abs_diff::ap_ST_fsm_state1 = "1";
const sc_lv<2> abs_diff::ap_ST_fsm_state2 = "10";
const sc_lv<32> abs_diff::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> abs_diff::ap_const_lv32_1 = "1";
const int abs_diff::C_M_AXI_C_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int abs_diff::C_M_AXI_C_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int abs_diff::C_M_AXI_C_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int abs_diff::C_M_AXI_C_CACHE_VALUE = "11";
const sc_lv<1> abs_diff::ap_const_lv1_0 = "0";
const sc_lv<8> abs_diff::ap_const_lv8_0 = "00000000";
const sc_lv<3> abs_diff::ap_const_lv3_0 = "000";
const sc_lv<2> abs_diff::ap_const_lv2_0 = "00";
const sc_lv<4> abs_diff::ap_const_lv4_0 = "0000";
const bool abs_diff::ap_const_boolean_1 = true;

abs_diff::abs_diff(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_y_data_V_U = new regslice_both<32>("regslice_both_y_data_V_U");
    regslice_both_y_data_V_U->ap_clk(ap_clk);
    regslice_both_y_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_y_data_V_U->data_in(y_TDATA_int);
    regslice_both_y_data_V_U->vld_in(y_TVALID_int);
    regslice_both_y_data_V_U->ack_in(y_TREADY_int);
    regslice_both_y_data_V_U->data_out(y_TDATA);
    regslice_both_y_data_V_U->vld_out(regslice_both_y_data_V_U_vld_out);
    regslice_both_y_data_V_U->ack_out(y_TREADY);
    regslice_both_y_data_V_U->apdone_blk(regslice_both_y_data_V_U_apdone_blk);
    regslice_both_y_keep_V_U = new regslice_both<4>("regslice_both_y_keep_V_U");
    regslice_both_y_keep_V_U->ap_clk(ap_clk);
    regslice_both_y_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_y_keep_V_U->data_in(img1_TKEEP_int);
    regslice_both_y_keep_V_U->vld_in(y_TVALID_int);
    regslice_both_y_keep_V_U->ack_in(regslice_both_y_keep_V_U_ack_in_dummy);
    regslice_both_y_keep_V_U->data_out(y_TKEEP);
    regslice_both_y_keep_V_U->vld_out(regslice_both_y_keep_V_U_vld_out);
    regslice_both_y_keep_V_U->ack_out(y_TREADY);
    regslice_both_y_keep_V_U->apdone_blk(regslice_both_y_keep_V_U_apdone_blk);
    regslice_both_y_strb_V_U = new regslice_both<4>("regslice_both_y_strb_V_U");
    regslice_both_y_strb_V_U->ap_clk(ap_clk);
    regslice_both_y_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_y_strb_V_U->data_in(img1_TSTRB_int);
    regslice_both_y_strb_V_U->vld_in(y_TVALID_int);
    regslice_both_y_strb_V_U->ack_in(regslice_both_y_strb_V_U_ack_in_dummy);
    regslice_both_y_strb_V_U->data_out(y_TSTRB);
    regslice_both_y_strb_V_U->vld_out(regslice_both_y_strb_V_U_vld_out);
    regslice_both_y_strb_V_U->ack_out(y_TREADY);
    regslice_both_y_strb_V_U->apdone_blk(regslice_both_y_strb_V_U_apdone_blk);
    regslice_both_y_user_V_U = new regslice_both<1>("regslice_both_y_user_V_U");
    regslice_both_y_user_V_U->ap_clk(ap_clk);
    regslice_both_y_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_y_user_V_U->data_in(img1_TUSER_int);
    regslice_both_y_user_V_U->vld_in(y_TVALID_int);
    regslice_both_y_user_V_U->ack_in(regslice_both_y_user_V_U_ack_in_dummy);
    regslice_both_y_user_V_U->data_out(y_TUSER);
    regslice_both_y_user_V_U->vld_out(regslice_both_y_user_V_U_vld_out);
    regslice_both_y_user_V_U->ack_out(y_TREADY);
    regslice_both_y_user_V_U->apdone_blk(regslice_both_y_user_V_U_apdone_blk);
    regslice_both_y_last_V_U = new regslice_both<1>("regslice_both_y_last_V_U");
    regslice_both_y_last_V_U->ap_clk(ap_clk);
    regslice_both_y_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_y_last_V_U->data_in(img1_TLAST_int);
    regslice_both_y_last_V_U->vld_in(y_TVALID_int);
    regslice_both_y_last_V_U->ack_in(regslice_both_y_last_V_U_ack_in_dummy);
    regslice_both_y_last_V_U->data_out(y_TLAST);
    regslice_both_y_last_V_U->vld_out(regslice_both_y_last_V_U_vld_out);
    regslice_both_y_last_V_U->ack_out(y_TREADY);
    regslice_both_y_last_V_U->apdone_blk(regslice_both_y_last_V_U_apdone_blk);
    regslice_both_y_id_V_U = new regslice_both<1>("regslice_both_y_id_V_U");
    regslice_both_y_id_V_U->ap_clk(ap_clk);
    regslice_both_y_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_y_id_V_U->data_in(img1_TID_int);
    regslice_both_y_id_V_U->vld_in(y_TVALID_int);
    regslice_both_y_id_V_U->ack_in(regslice_both_y_id_V_U_ack_in_dummy);
    regslice_both_y_id_V_U->data_out(y_TID);
    regslice_both_y_id_V_U->vld_out(regslice_both_y_id_V_U_vld_out);
    regslice_both_y_id_V_U->ack_out(y_TREADY);
    regslice_both_y_id_V_U->apdone_blk(regslice_both_y_id_V_U_apdone_blk);
    regslice_both_y_dest_V_U = new regslice_both<1>("regslice_both_y_dest_V_U");
    regslice_both_y_dest_V_U->ap_clk(ap_clk);
    regslice_both_y_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_y_dest_V_U->data_in(img1_TDEST_int);
    regslice_both_y_dest_V_U->vld_in(y_TVALID_int);
    regslice_both_y_dest_V_U->ack_in(regslice_both_y_dest_V_U_ack_in_dummy);
    regslice_both_y_dest_V_U->data_out(y_TDEST);
    regslice_both_y_dest_V_U->vld_out(regslice_both_y_dest_V_U_vld_out);
    regslice_both_y_dest_V_U->ack_out(y_TREADY);
    regslice_both_y_dest_V_U->apdone_blk(regslice_both_y_dest_V_U_apdone_blk);
    regslice_both_img1_data_V_U = new regslice_both<32>("regslice_both_img1_data_V_U");
    regslice_both_img1_data_V_U->ap_clk(ap_clk);
    regslice_both_img1_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img1_data_V_U->data_in(img1_TDATA);
    regslice_both_img1_data_V_U->vld_in(img1_TVALID);
    regslice_both_img1_data_V_U->ack_in(regslice_both_img1_data_V_U_ack_in);
    regslice_both_img1_data_V_U->data_out(img1_TDATA_int);
    regslice_both_img1_data_V_U->vld_out(img1_TVALID_int);
    regslice_both_img1_data_V_U->ack_out(img1_TREADY_int);
    regslice_both_img1_data_V_U->apdone_blk(regslice_both_img1_data_V_U_apdone_blk);
    regslice_both_img1_keep_V_U = new regslice_both<4>("regslice_both_img1_keep_V_U");
    regslice_both_img1_keep_V_U->ap_clk(ap_clk);
    regslice_both_img1_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img1_keep_V_U->data_in(img1_TKEEP);
    regslice_both_img1_keep_V_U->vld_in(img1_TVALID);
    regslice_both_img1_keep_V_U->ack_in(regslice_both_img1_keep_V_U_ack_in);
    regslice_both_img1_keep_V_U->data_out(img1_TKEEP_int);
    regslice_both_img1_keep_V_U->vld_out(regslice_both_img1_keep_V_U_vld_out);
    regslice_both_img1_keep_V_U->ack_out(img1_TREADY_int);
    regslice_both_img1_keep_V_U->apdone_blk(regslice_both_img1_keep_V_U_apdone_blk);
    regslice_both_img1_strb_V_U = new regslice_both<4>("regslice_both_img1_strb_V_U");
    regslice_both_img1_strb_V_U->ap_clk(ap_clk);
    regslice_both_img1_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img1_strb_V_U->data_in(img1_TSTRB);
    regslice_both_img1_strb_V_U->vld_in(img1_TVALID);
    regslice_both_img1_strb_V_U->ack_in(regslice_both_img1_strb_V_U_ack_in);
    regslice_both_img1_strb_V_U->data_out(img1_TSTRB_int);
    regslice_both_img1_strb_V_U->vld_out(regslice_both_img1_strb_V_U_vld_out);
    regslice_both_img1_strb_V_U->ack_out(img1_TREADY_int);
    regslice_both_img1_strb_V_U->apdone_blk(regslice_both_img1_strb_V_U_apdone_blk);
    regslice_both_img1_user_V_U = new regslice_both<1>("regslice_both_img1_user_V_U");
    regslice_both_img1_user_V_U->ap_clk(ap_clk);
    regslice_both_img1_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img1_user_V_U->data_in(img1_TUSER);
    regslice_both_img1_user_V_U->vld_in(img1_TVALID);
    regslice_both_img1_user_V_U->ack_in(regslice_both_img1_user_V_U_ack_in);
    regslice_both_img1_user_V_U->data_out(img1_TUSER_int);
    regslice_both_img1_user_V_U->vld_out(regslice_both_img1_user_V_U_vld_out);
    regslice_both_img1_user_V_U->ack_out(img1_TREADY_int);
    regslice_both_img1_user_V_U->apdone_blk(regslice_both_img1_user_V_U_apdone_blk);
    regslice_both_img1_last_V_U = new regslice_both<1>("regslice_both_img1_last_V_U");
    regslice_both_img1_last_V_U->ap_clk(ap_clk);
    regslice_both_img1_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img1_last_V_U->data_in(img1_TLAST);
    regslice_both_img1_last_V_U->vld_in(img1_TVALID);
    regslice_both_img1_last_V_U->ack_in(regslice_both_img1_last_V_U_ack_in);
    regslice_both_img1_last_V_U->data_out(img1_TLAST_int);
    regslice_both_img1_last_V_U->vld_out(regslice_both_img1_last_V_U_vld_out);
    regslice_both_img1_last_V_U->ack_out(img1_TREADY_int);
    regslice_both_img1_last_V_U->apdone_blk(regslice_both_img1_last_V_U_apdone_blk);
    regslice_both_img1_id_V_U = new regslice_both<1>("regslice_both_img1_id_V_U");
    regslice_both_img1_id_V_U->ap_clk(ap_clk);
    regslice_both_img1_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img1_id_V_U->data_in(img1_TID);
    regslice_both_img1_id_V_U->vld_in(img1_TVALID);
    regslice_both_img1_id_V_U->ack_in(regslice_both_img1_id_V_U_ack_in);
    regslice_both_img1_id_V_U->data_out(img1_TID_int);
    regslice_both_img1_id_V_U->vld_out(regslice_both_img1_id_V_U_vld_out);
    regslice_both_img1_id_V_U->ack_out(img1_TREADY_int);
    regslice_both_img1_id_V_U->apdone_blk(regslice_both_img1_id_V_U_apdone_blk);
    regslice_both_img1_dest_V_U = new regslice_both<1>("regslice_both_img1_dest_V_U");
    regslice_both_img1_dest_V_U->ap_clk(ap_clk);
    regslice_both_img1_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img1_dest_V_U->data_in(img1_TDEST);
    regslice_both_img1_dest_V_U->vld_in(img1_TVALID);
    regslice_both_img1_dest_V_U->ack_in(regslice_both_img1_dest_V_U_ack_in);
    regslice_both_img1_dest_V_U->data_out(img1_TDEST_int);
    regslice_both_img1_dest_V_U->vld_out(regslice_both_img1_dest_V_U_vld_out);
    regslice_both_img1_dest_V_U->ack_out(img1_TREADY_int);
    regslice_both_img1_dest_V_U->apdone_blk(regslice_both_img1_dest_V_U_apdone_blk);
    regslice_both_img2_data_V_U = new regslice_both<32>("regslice_both_img2_data_V_U");
    regslice_both_img2_data_V_U->ap_clk(ap_clk);
    regslice_both_img2_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img2_data_V_U->data_in(img2_TDATA);
    regslice_both_img2_data_V_U->vld_in(img2_TVALID);
    regslice_both_img2_data_V_U->ack_in(regslice_both_img2_data_V_U_ack_in);
    regslice_both_img2_data_V_U->data_out(img2_TDATA_int);
    regslice_both_img2_data_V_U->vld_out(img2_TVALID_int);
    regslice_both_img2_data_V_U->ack_out(img2_TREADY_int);
    regslice_both_img2_data_V_U->apdone_blk(regslice_both_img2_data_V_U_apdone_blk);
    regslice_both_img2_keep_V_U = new regslice_both<4>("regslice_both_img2_keep_V_U");
    regslice_both_img2_keep_V_U->ap_clk(ap_clk);
    regslice_both_img2_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img2_keep_V_U->data_in(img2_TKEEP);
    regslice_both_img2_keep_V_U->vld_in(img2_TVALID);
    regslice_both_img2_keep_V_U->ack_in(regslice_both_img2_keep_V_U_ack_in);
    regslice_both_img2_keep_V_U->data_out(img2_TKEEP_int);
    regslice_both_img2_keep_V_U->vld_out(regslice_both_img2_keep_V_U_vld_out);
    regslice_both_img2_keep_V_U->ack_out(img2_TREADY_int);
    regslice_both_img2_keep_V_U->apdone_blk(regslice_both_img2_keep_V_U_apdone_blk);
    regslice_both_img2_strb_V_U = new regslice_both<4>("regslice_both_img2_strb_V_U");
    regslice_both_img2_strb_V_U->ap_clk(ap_clk);
    regslice_both_img2_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img2_strb_V_U->data_in(img2_TSTRB);
    regslice_both_img2_strb_V_U->vld_in(img2_TVALID);
    regslice_both_img2_strb_V_U->ack_in(regslice_both_img2_strb_V_U_ack_in);
    regslice_both_img2_strb_V_U->data_out(img2_TSTRB_int);
    regslice_both_img2_strb_V_U->vld_out(regslice_both_img2_strb_V_U_vld_out);
    regslice_both_img2_strb_V_U->ack_out(img2_TREADY_int);
    regslice_both_img2_strb_V_U->apdone_blk(regslice_both_img2_strb_V_U_apdone_blk);
    regslice_both_img2_user_V_U = new regslice_both<1>("regslice_both_img2_user_V_U");
    regslice_both_img2_user_V_U->ap_clk(ap_clk);
    regslice_both_img2_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img2_user_V_U->data_in(img2_TUSER);
    regslice_both_img2_user_V_U->vld_in(img2_TVALID);
    regslice_both_img2_user_V_U->ack_in(regslice_both_img2_user_V_U_ack_in);
    regslice_both_img2_user_V_U->data_out(img2_TUSER_int);
    regslice_both_img2_user_V_U->vld_out(regslice_both_img2_user_V_U_vld_out);
    regslice_both_img2_user_V_U->ack_out(img2_TREADY_int);
    regslice_both_img2_user_V_U->apdone_blk(regslice_both_img2_user_V_U_apdone_blk);
    regslice_both_img2_last_V_U = new regslice_both<1>("regslice_both_img2_last_V_U");
    regslice_both_img2_last_V_U->ap_clk(ap_clk);
    regslice_both_img2_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img2_last_V_U->data_in(img2_TLAST);
    regslice_both_img2_last_V_U->vld_in(img2_TVALID);
    regslice_both_img2_last_V_U->ack_in(regslice_both_img2_last_V_U_ack_in);
    regslice_both_img2_last_V_U->data_out(img2_TLAST_int);
    regslice_both_img2_last_V_U->vld_out(regslice_both_img2_last_V_U_vld_out);
    regslice_both_img2_last_V_U->ack_out(img2_TREADY_int);
    regslice_both_img2_last_V_U->apdone_blk(regslice_both_img2_last_V_U_apdone_blk);
    regslice_both_img2_id_V_U = new regslice_both<1>("regslice_both_img2_id_V_U");
    regslice_both_img2_id_V_U->ap_clk(ap_clk);
    regslice_both_img2_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img2_id_V_U->data_in(img2_TID);
    regslice_both_img2_id_V_U->vld_in(img2_TVALID);
    regslice_both_img2_id_V_U->ack_in(regslice_both_img2_id_V_U_ack_in);
    regslice_both_img2_id_V_U->data_out(img2_TID_int);
    regslice_both_img2_id_V_U->vld_out(regslice_both_img2_id_V_U_vld_out);
    regslice_both_img2_id_V_U->ack_out(img2_TREADY_int);
    regslice_both_img2_id_V_U->apdone_blk(regslice_both_img2_id_V_U_apdone_blk);
    regslice_both_img2_dest_V_U = new regslice_both<1>("regslice_both_img2_dest_V_U");
    regslice_both_img2_dest_V_U->ap_clk(ap_clk);
    regslice_both_img2_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_img2_dest_V_U->data_in(img2_TDEST);
    regslice_both_img2_dest_V_U->vld_in(img2_TVALID);
    regslice_both_img2_dest_V_U->ack_in(regslice_both_img2_dest_V_U_ack_in);
    regslice_both_img2_dest_V_U->data_out(img2_TDEST_int);
    regslice_both_img2_dest_V_U->vld_out(regslice_both_img2_dest_V_U_vld_out);
    regslice_both_img2_dest_V_U->ack_out(img2_TREADY_int);
    regslice_both_img2_dest_V_U->apdone_blk(regslice_both_img2_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_abscond_100_fu_185_p2);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sub_ln22_fu_173_p2 );
    sensitive << ( y_TREADY_int );
    sensitive << ( img1_TVALID_int );
    sensitive << ( img2_TVALID_int );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( img1_TVALID_int );
    sensitive << ( img2_TVALID_int );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_img1_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img1_TVALID_int );

    SC_METHOD(thread_img1_TREADY);
    sensitive << ( img1_TVALID );
    sensitive << ( regslice_both_img1_data_V_U_ack_in );

    SC_METHOD(thread_img1_TREADY_int);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( y_TREADY_int );
    sensitive << ( img1_TVALID_int );
    sensitive << ( img2_TVALID_int );

    SC_METHOD(thread_img2_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img2_TVALID_int );

    SC_METHOD(thread_img2_TREADY);
    sensitive << ( img2_TVALID );
    sensitive << ( regslice_both_img2_data_V_U_ack_in );

    SC_METHOD(thread_img2_TREADY_int);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( y_TREADY_int );
    sensitive << ( img1_TVALID_int );
    sensitive << ( img2_TVALID_int );

    SC_METHOD(thread_m_axi_c_ARADDR);

    SC_METHOD(thread_m_axi_c_ARBURST);

    SC_METHOD(thread_m_axi_c_ARCACHE);

    SC_METHOD(thread_m_axi_c_ARID);

    SC_METHOD(thread_m_axi_c_ARLEN);

    SC_METHOD(thread_m_axi_c_ARLOCK);

    SC_METHOD(thread_m_axi_c_ARPROT);

    SC_METHOD(thread_m_axi_c_ARQOS);

    SC_METHOD(thread_m_axi_c_ARREGION);

    SC_METHOD(thread_m_axi_c_ARSIZE);

    SC_METHOD(thread_m_axi_c_ARUSER);

    SC_METHOD(thread_m_axi_c_ARVALID);

    SC_METHOD(thread_m_axi_c_AWADDR);

    SC_METHOD(thread_m_axi_c_AWBURST);

    SC_METHOD(thread_m_axi_c_AWCACHE);

    SC_METHOD(thread_m_axi_c_AWID);

    SC_METHOD(thread_m_axi_c_AWLEN);

    SC_METHOD(thread_m_axi_c_AWLOCK);

    SC_METHOD(thread_m_axi_c_AWPROT);

    SC_METHOD(thread_m_axi_c_AWQOS);

    SC_METHOD(thread_m_axi_c_AWREGION);

    SC_METHOD(thread_m_axi_c_AWSIZE);

    SC_METHOD(thread_m_axi_c_AWUSER);

    SC_METHOD(thread_m_axi_c_AWVALID);

    SC_METHOD(thread_m_axi_c_BREADY);

    SC_METHOD(thread_m_axi_c_RREADY);

    SC_METHOD(thread_m_axi_c_WDATA);

    SC_METHOD(thread_m_axi_c_WID);

    SC_METHOD(thread_m_axi_c_WLAST);

    SC_METHOD(thread_m_axi_c_WSTRB);

    SC_METHOD(thread_m_axi_c_WUSER);

    SC_METHOD(thread_m_axi_c_WVALID);

    SC_METHOD(thread_neg_100_fu_179_p2);
    sensitive << ( sub_ln22_fu_173_p2 );

    SC_METHOD(thread_sub_ln22_fu_173_p2);
    sensitive << ( img1_TDATA_int );
    sensitive << ( img2_TDATA_int );

    SC_METHOD(thread_y_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( y_TREADY_int );

    SC_METHOD(thread_y_TDATA_int);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sub_ln22_fu_173_p2 );
    sensitive << ( abscond_100_fu_185_p2 );
    sensitive << ( neg_100_fu_179_p2 );
    sensitive << ( img1_TVALID_int );
    sensitive << ( img2_TVALID_int );

    SC_METHOD(thread_y_TVALID);
    sensitive << ( regslice_both_y_data_V_U_vld_out );

    SC_METHOD(thread_y_TVALID_int);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( y_TREADY_int );
    sensitive << ( img1_TVALID_int );
    sensitive << ( img2_TVALID_int );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_y_data_V_U_apdone_blk );
    sensitive << ( y_TREADY_int );
    sensitive << ( img1_TVALID_int );
    sensitive << ( img2_TVALID_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "abs_diff_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, y_TDATA, "(port)y_TDATA");
    sc_trace(mVcdFile, y_TVALID, "(port)y_TVALID");
    sc_trace(mVcdFile, y_TREADY, "(port)y_TREADY");
    sc_trace(mVcdFile, y_TKEEP, "(port)y_TKEEP");
    sc_trace(mVcdFile, y_TSTRB, "(port)y_TSTRB");
    sc_trace(mVcdFile, y_TUSER, "(port)y_TUSER");
    sc_trace(mVcdFile, y_TLAST, "(port)y_TLAST");
    sc_trace(mVcdFile, y_TID, "(port)y_TID");
    sc_trace(mVcdFile, y_TDEST, "(port)y_TDEST");
    sc_trace(mVcdFile, m_axi_c_AWVALID, "(port)m_axi_c_AWVALID");
    sc_trace(mVcdFile, m_axi_c_AWREADY, "(port)m_axi_c_AWREADY");
    sc_trace(mVcdFile, m_axi_c_AWADDR, "(port)m_axi_c_AWADDR");
    sc_trace(mVcdFile, m_axi_c_AWID, "(port)m_axi_c_AWID");
    sc_trace(mVcdFile, m_axi_c_AWLEN, "(port)m_axi_c_AWLEN");
    sc_trace(mVcdFile, m_axi_c_AWSIZE, "(port)m_axi_c_AWSIZE");
    sc_trace(mVcdFile, m_axi_c_AWBURST, "(port)m_axi_c_AWBURST");
    sc_trace(mVcdFile, m_axi_c_AWLOCK, "(port)m_axi_c_AWLOCK");
    sc_trace(mVcdFile, m_axi_c_AWCACHE, "(port)m_axi_c_AWCACHE");
    sc_trace(mVcdFile, m_axi_c_AWPROT, "(port)m_axi_c_AWPROT");
    sc_trace(mVcdFile, m_axi_c_AWQOS, "(port)m_axi_c_AWQOS");
    sc_trace(mVcdFile, m_axi_c_AWREGION, "(port)m_axi_c_AWREGION");
    sc_trace(mVcdFile, m_axi_c_AWUSER, "(port)m_axi_c_AWUSER");
    sc_trace(mVcdFile, m_axi_c_WVALID, "(port)m_axi_c_WVALID");
    sc_trace(mVcdFile, m_axi_c_WREADY, "(port)m_axi_c_WREADY");
    sc_trace(mVcdFile, m_axi_c_WDATA, "(port)m_axi_c_WDATA");
    sc_trace(mVcdFile, m_axi_c_WSTRB, "(port)m_axi_c_WSTRB");
    sc_trace(mVcdFile, m_axi_c_WLAST, "(port)m_axi_c_WLAST");
    sc_trace(mVcdFile, m_axi_c_WID, "(port)m_axi_c_WID");
    sc_trace(mVcdFile, m_axi_c_WUSER, "(port)m_axi_c_WUSER");
    sc_trace(mVcdFile, m_axi_c_ARVALID, "(port)m_axi_c_ARVALID");
    sc_trace(mVcdFile, m_axi_c_ARREADY, "(port)m_axi_c_ARREADY");
    sc_trace(mVcdFile, m_axi_c_ARADDR, "(port)m_axi_c_ARADDR");
    sc_trace(mVcdFile, m_axi_c_ARID, "(port)m_axi_c_ARID");
    sc_trace(mVcdFile, m_axi_c_ARLEN, "(port)m_axi_c_ARLEN");
    sc_trace(mVcdFile, m_axi_c_ARSIZE, "(port)m_axi_c_ARSIZE");
    sc_trace(mVcdFile, m_axi_c_ARBURST, "(port)m_axi_c_ARBURST");
    sc_trace(mVcdFile, m_axi_c_ARLOCK, "(port)m_axi_c_ARLOCK");
    sc_trace(mVcdFile, m_axi_c_ARCACHE, "(port)m_axi_c_ARCACHE");
    sc_trace(mVcdFile, m_axi_c_ARPROT, "(port)m_axi_c_ARPROT");
    sc_trace(mVcdFile, m_axi_c_ARQOS, "(port)m_axi_c_ARQOS");
    sc_trace(mVcdFile, m_axi_c_ARREGION, "(port)m_axi_c_ARREGION");
    sc_trace(mVcdFile, m_axi_c_ARUSER, "(port)m_axi_c_ARUSER");
    sc_trace(mVcdFile, m_axi_c_RVALID, "(port)m_axi_c_RVALID");
    sc_trace(mVcdFile, m_axi_c_RREADY, "(port)m_axi_c_RREADY");
    sc_trace(mVcdFile, m_axi_c_RDATA, "(port)m_axi_c_RDATA");
    sc_trace(mVcdFile, m_axi_c_RLAST, "(port)m_axi_c_RLAST");
    sc_trace(mVcdFile, m_axi_c_RID, "(port)m_axi_c_RID");
    sc_trace(mVcdFile, m_axi_c_RUSER, "(port)m_axi_c_RUSER");
    sc_trace(mVcdFile, m_axi_c_RRESP, "(port)m_axi_c_RRESP");
    sc_trace(mVcdFile, m_axi_c_BVALID, "(port)m_axi_c_BVALID");
    sc_trace(mVcdFile, m_axi_c_BREADY, "(port)m_axi_c_BREADY");
    sc_trace(mVcdFile, m_axi_c_BRESP, "(port)m_axi_c_BRESP");
    sc_trace(mVcdFile, m_axi_c_BID, "(port)m_axi_c_BID");
    sc_trace(mVcdFile, m_axi_c_BUSER, "(port)m_axi_c_BUSER");
    sc_trace(mVcdFile, img1_TDATA, "(port)img1_TDATA");
    sc_trace(mVcdFile, img1_TVALID, "(port)img1_TVALID");
    sc_trace(mVcdFile, img1_TREADY, "(port)img1_TREADY");
    sc_trace(mVcdFile, img1_TKEEP, "(port)img1_TKEEP");
    sc_trace(mVcdFile, img1_TSTRB, "(port)img1_TSTRB");
    sc_trace(mVcdFile, img1_TUSER, "(port)img1_TUSER");
    sc_trace(mVcdFile, img1_TLAST, "(port)img1_TLAST");
    sc_trace(mVcdFile, img1_TID, "(port)img1_TID");
    sc_trace(mVcdFile, img1_TDEST, "(port)img1_TDEST");
    sc_trace(mVcdFile, img2_TDATA, "(port)img2_TDATA");
    sc_trace(mVcdFile, img2_TVALID, "(port)img2_TVALID");
    sc_trace(mVcdFile, img2_TREADY, "(port)img2_TREADY");
    sc_trace(mVcdFile, img2_TKEEP, "(port)img2_TKEEP");
    sc_trace(mVcdFile, img2_TSTRB, "(port)img2_TSTRB");
    sc_trace(mVcdFile, img2_TUSER, "(port)img2_TUSER");
    sc_trace(mVcdFile, img2_TLAST, "(port)img2_TLAST");
    sc_trace(mVcdFile, img2_TID, "(port)img2_TID");
    sc_trace(mVcdFile, img2_TDEST, "(port)img2_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, y_TDATA_blk_n, "y_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, img1_TDATA_blk_n, "img1_TDATA_blk_n");
    sc_trace(mVcdFile, img2_TDATA_blk_n, "img2_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, sub_ln22_fu_173_p2, "sub_ln22_fu_173_p2");
    sc_trace(mVcdFile, abscond_100_fu_185_p2, "abscond_100_fu_185_p2");
    sc_trace(mVcdFile, neg_100_fu_179_p2, "neg_100_fu_179_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_y_data_V_U_apdone_blk, "regslice_both_y_data_V_U_apdone_blk");
    sc_trace(mVcdFile, y_TDATA_int, "y_TDATA_int");
    sc_trace(mVcdFile, y_TVALID_int, "y_TVALID_int");
    sc_trace(mVcdFile, y_TREADY_int, "y_TREADY_int");
    sc_trace(mVcdFile, regslice_both_y_data_V_U_vld_out, "regslice_both_y_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_y_keep_V_U_apdone_blk, "regslice_both_y_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_y_keep_V_U_ack_in_dummy, "regslice_both_y_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_y_keep_V_U_vld_out, "regslice_both_y_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_y_strb_V_U_apdone_blk, "regslice_both_y_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_y_strb_V_U_ack_in_dummy, "regslice_both_y_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_y_strb_V_U_vld_out, "regslice_both_y_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_y_user_V_U_apdone_blk, "regslice_both_y_user_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_y_user_V_U_ack_in_dummy, "regslice_both_y_user_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_y_user_V_U_vld_out, "regslice_both_y_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_y_last_V_U_apdone_blk, "regslice_both_y_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_y_last_V_U_ack_in_dummy, "regslice_both_y_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_y_last_V_U_vld_out, "regslice_both_y_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_y_id_V_U_apdone_blk, "regslice_both_y_id_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_y_id_V_U_ack_in_dummy, "regslice_both_y_id_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_y_id_V_U_vld_out, "regslice_both_y_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_y_dest_V_U_apdone_blk, "regslice_both_y_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_y_dest_V_U_ack_in_dummy, "regslice_both_y_dest_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_y_dest_V_U_vld_out, "regslice_both_y_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img1_data_V_U_apdone_blk, "regslice_both_img1_data_V_U_apdone_blk");
    sc_trace(mVcdFile, img1_TDATA_int, "img1_TDATA_int");
    sc_trace(mVcdFile, img1_TVALID_int, "img1_TVALID_int");
    sc_trace(mVcdFile, img1_TREADY_int, "img1_TREADY_int");
    sc_trace(mVcdFile, regslice_both_img1_data_V_U_ack_in, "regslice_both_img1_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img1_keep_V_U_apdone_blk, "regslice_both_img1_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, img1_TKEEP_int, "img1_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_img1_keep_V_U_vld_out, "regslice_both_img1_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img1_keep_V_U_ack_in, "regslice_both_img1_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img1_strb_V_U_apdone_blk, "regslice_both_img1_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, img1_TSTRB_int, "img1_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_img1_strb_V_U_vld_out, "regslice_both_img1_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img1_strb_V_U_ack_in, "regslice_both_img1_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img1_user_V_U_apdone_blk, "regslice_both_img1_user_V_U_apdone_blk");
    sc_trace(mVcdFile, img1_TUSER_int, "img1_TUSER_int");
    sc_trace(mVcdFile, regslice_both_img1_user_V_U_vld_out, "regslice_both_img1_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img1_user_V_U_ack_in, "regslice_both_img1_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img1_last_V_U_apdone_blk, "regslice_both_img1_last_V_U_apdone_blk");
    sc_trace(mVcdFile, img1_TLAST_int, "img1_TLAST_int");
    sc_trace(mVcdFile, regslice_both_img1_last_V_U_vld_out, "regslice_both_img1_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img1_last_V_U_ack_in, "regslice_both_img1_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img1_id_V_U_apdone_blk, "regslice_both_img1_id_V_U_apdone_blk");
    sc_trace(mVcdFile, img1_TID_int, "img1_TID_int");
    sc_trace(mVcdFile, regslice_both_img1_id_V_U_vld_out, "regslice_both_img1_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img1_id_V_U_ack_in, "regslice_both_img1_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img1_dest_V_U_apdone_blk, "regslice_both_img1_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, img1_TDEST_int, "img1_TDEST_int");
    sc_trace(mVcdFile, regslice_both_img1_dest_V_U_vld_out, "regslice_both_img1_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img1_dest_V_U_ack_in, "regslice_both_img1_dest_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img2_data_V_U_apdone_blk, "regslice_both_img2_data_V_U_apdone_blk");
    sc_trace(mVcdFile, img2_TDATA_int, "img2_TDATA_int");
    sc_trace(mVcdFile, img2_TVALID_int, "img2_TVALID_int");
    sc_trace(mVcdFile, img2_TREADY_int, "img2_TREADY_int");
    sc_trace(mVcdFile, regslice_both_img2_data_V_U_ack_in, "regslice_both_img2_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img2_keep_V_U_apdone_blk, "regslice_both_img2_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, img2_TKEEP_int, "img2_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_img2_keep_V_U_vld_out, "regslice_both_img2_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img2_keep_V_U_ack_in, "regslice_both_img2_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img2_strb_V_U_apdone_blk, "regslice_both_img2_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, img2_TSTRB_int, "img2_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_img2_strb_V_U_vld_out, "regslice_both_img2_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img2_strb_V_U_ack_in, "regslice_both_img2_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img2_user_V_U_apdone_blk, "regslice_both_img2_user_V_U_apdone_blk");
    sc_trace(mVcdFile, img2_TUSER_int, "img2_TUSER_int");
    sc_trace(mVcdFile, regslice_both_img2_user_V_U_vld_out, "regslice_both_img2_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img2_user_V_U_ack_in, "regslice_both_img2_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img2_last_V_U_apdone_blk, "regslice_both_img2_last_V_U_apdone_blk");
    sc_trace(mVcdFile, img2_TLAST_int, "img2_TLAST_int");
    sc_trace(mVcdFile, regslice_both_img2_last_V_U_vld_out, "regslice_both_img2_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img2_last_V_U_ack_in, "regslice_both_img2_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img2_id_V_U_apdone_blk, "regslice_both_img2_id_V_U_apdone_blk");
    sc_trace(mVcdFile, img2_TID_int, "img2_TID_int");
    sc_trace(mVcdFile, regslice_both_img2_id_V_U_vld_out, "regslice_both_img2_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img2_id_V_U_ack_in, "regslice_both_img2_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_img2_dest_V_U_apdone_blk, "regslice_both_img2_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, img2_TDEST_int, "img2_TDEST_int");
    sc_trace(mVcdFile, regslice_both_img2_dest_V_U_vld_out, "regslice_both_img2_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_img2_dest_V_U_ack_in, "regslice_both_img2_dest_V_U_ack_in");
#endif

    }
    mHdltvinHandle.open("abs_diff.hdltvin.dat");
    mHdltvoutHandle.open("abs_diff.hdltvout.dat");
}

abs_diff::~abs_diff() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete regslice_both_y_data_V_U;
    delete regslice_both_y_keep_V_U;
    delete regslice_both_y_strb_V_U;
    delete regslice_both_y_user_V_U;
    delete regslice_both_y_last_V_U;
    delete regslice_both_y_id_V_U;
    delete regslice_both_y_dest_V_U;
    delete regslice_both_img1_data_V_U;
    delete regslice_both_img1_keep_V_U;
    delete regslice_both_img1_strb_V_U;
    delete regslice_both_img1_user_V_U;
    delete regslice_both_img1_last_V_U;
    delete regslice_both_img1_id_V_U;
    delete regslice_both_img1_dest_V_U;
    delete regslice_both_img2_data_V_U;
    delete regslice_both_img2_keep_V_U;
    delete regslice_both_img2_strb_V_U;
    delete regslice_both_img2_user_V_U;
    delete regslice_both_img2_last_V_U;
    delete regslice_both_img2_id_V_U;
    delete regslice_both_img2_dest_V_U;
}

void abs_diff::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
}

void abs_diff::thread_abscond_100_fu_185_p2() {
    abscond_100_fu_185_p2 = (!sub_ln22_fu_173_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(sub_ln22_fu_173_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void abs_diff::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void abs_diff::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void abs_diff::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, img1_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img2_TVALID_int.read()));
}

void abs_diff::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void abs_diff::thread_img1_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        img1_TDATA_blk_n = img1_TVALID_int.read();
    } else {
        img1_TDATA_blk_n = ap_const_logic_1;
    }
}

void abs_diff::thread_img1_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, img1_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_img1_data_V_U_ack_in.read()))) {
        img1_TREADY = ap_const_logic_1;
    } else {
        img1_TREADY = ap_const_logic_0;
    }
}

void abs_diff::thread_img1_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, y_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img1_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img2_TVALID_int.read())))) {
        img1_TREADY_int = ap_const_logic_1;
    } else {
        img1_TREADY_int = ap_const_logic_0;
    }
}

void abs_diff::thread_img2_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        img2_TDATA_blk_n = img2_TVALID_int.read();
    } else {
        img2_TDATA_blk_n = ap_const_logic_1;
    }
}

void abs_diff::thread_img2_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, img2_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_img2_data_V_U_ack_in.read()))) {
        img2_TREADY = ap_const_logic_1;
    } else {
        img2_TREADY = ap_const_logic_0;
    }
}

void abs_diff::thread_img2_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, y_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img1_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img2_TVALID_int.read())))) {
        img2_TREADY_int = ap_const_logic_1;
    } else {
        img2_TREADY_int = ap_const_logic_0;
    }
}

void abs_diff::thread_m_axi_c_ARADDR() {
    m_axi_c_ARADDR = ap_const_lv32_0;
}

void abs_diff::thread_m_axi_c_ARBURST() {
    m_axi_c_ARBURST = ap_const_lv2_0;
}

void abs_diff::thread_m_axi_c_ARCACHE() {
    m_axi_c_ARCACHE = ap_const_lv4_0;
}

void abs_diff::thread_m_axi_c_ARID() {
    m_axi_c_ARID = ap_const_lv1_0;
}

void abs_diff::thread_m_axi_c_ARLEN() {
    m_axi_c_ARLEN = ap_const_lv8_0;
}

void abs_diff::thread_m_axi_c_ARLOCK() {
    m_axi_c_ARLOCK = ap_const_lv2_0;
}

void abs_diff::thread_m_axi_c_ARPROT() {
    m_axi_c_ARPROT = ap_const_lv3_0;
}

void abs_diff::thread_m_axi_c_ARQOS() {
    m_axi_c_ARQOS = ap_const_lv4_0;
}

void abs_diff::thread_m_axi_c_ARREGION() {
    m_axi_c_ARREGION = ap_const_lv4_0;
}

void abs_diff::thread_m_axi_c_ARSIZE() {
    m_axi_c_ARSIZE = ap_const_lv3_0;
}

void abs_diff::thread_m_axi_c_ARUSER() {
    m_axi_c_ARUSER = ap_const_lv1_0;
}

void abs_diff::thread_m_axi_c_ARVALID() {
    m_axi_c_ARVALID = ap_const_logic_0;
}

void abs_diff::thread_m_axi_c_AWADDR() {
    m_axi_c_AWADDR = ap_const_lv32_0;
}

void abs_diff::thread_m_axi_c_AWBURST() {
    m_axi_c_AWBURST = ap_const_lv2_0;
}

void abs_diff::thread_m_axi_c_AWCACHE() {
    m_axi_c_AWCACHE = ap_const_lv4_0;
}

void abs_diff::thread_m_axi_c_AWID() {
    m_axi_c_AWID = ap_const_lv1_0;
}

void abs_diff::thread_m_axi_c_AWLEN() {
    m_axi_c_AWLEN = ap_const_lv8_0;
}

void abs_diff::thread_m_axi_c_AWLOCK() {
    m_axi_c_AWLOCK = ap_const_lv2_0;
}

void abs_diff::thread_m_axi_c_AWPROT() {
    m_axi_c_AWPROT = ap_const_lv3_0;
}

void abs_diff::thread_m_axi_c_AWQOS() {
    m_axi_c_AWQOS = ap_const_lv4_0;
}

void abs_diff::thread_m_axi_c_AWREGION() {
    m_axi_c_AWREGION = ap_const_lv4_0;
}

void abs_diff::thread_m_axi_c_AWSIZE() {
    m_axi_c_AWSIZE = ap_const_lv3_0;
}

void abs_diff::thread_m_axi_c_AWUSER() {
    m_axi_c_AWUSER = ap_const_lv1_0;
}

void abs_diff::thread_m_axi_c_AWVALID() {
    m_axi_c_AWVALID = ap_const_logic_0;
}

void abs_diff::thread_m_axi_c_BREADY() {
    m_axi_c_BREADY = ap_const_logic_0;
}

void abs_diff::thread_m_axi_c_RREADY() {
    m_axi_c_RREADY = ap_const_logic_0;
}

void abs_diff::thread_m_axi_c_WDATA() {
    m_axi_c_WDATA = ap_const_lv32_0;
}

void abs_diff::thread_m_axi_c_WID() {
    m_axi_c_WID = ap_const_lv1_0;
}

void abs_diff::thread_m_axi_c_WLAST() {
    m_axi_c_WLAST = ap_const_logic_0;
}

void abs_diff::thread_m_axi_c_WSTRB() {
    m_axi_c_WSTRB = ap_const_lv4_0;
}

void abs_diff::thread_m_axi_c_WUSER() {
    m_axi_c_WUSER = ap_const_lv1_0;
}

void abs_diff::thread_m_axi_c_WVALID() {
    m_axi_c_WVALID = ap_const_logic_0;
}

void abs_diff::thread_neg_100_fu_179_p2() {
    neg_100_fu_179_p2 = (!ap_const_lv32_0.is_01() || !sub_ln22_fu_173_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sub_ln22_fu_173_p2.read()));
}

void abs_diff::thread_sub_ln22_fu_173_p2() {
    sub_ln22_fu_173_p2 = (!img1_TDATA_int.read().is_01() || !img2_TDATA_int.read().is_01())? sc_lv<32>(): (sc_biguint<32>(img1_TDATA_int.read()) - sc_biguint<32>(img2_TDATA_int.read()));
}

void abs_diff::thread_y_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        y_TDATA_blk_n = y_TREADY_int.read();
    } else {
        y_TDATA_blk_n = ap_const_logic_1;
    }
}

void abs_diff::thread_y_TDATA_int() {
    y_TDATA_int = (!abscond_100_fu_185_p2.read()[0].is_01())? sc_lv<32>(): ((abscond_100_fu_185_p2.read()[0].to_bool())? sub_ln22_fu_173_p2.read(): neg_100_fu_179_p2.read());
}

void abs_diff::thread_y_TVALID() {
    y_TVALID = regslice_both_y_data_V_U_vld_out.read();
}

void abs_diff::thread_y_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, y_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img1_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img2_TVALID_int.read())))) {
        y_TVALID_int = ap_const_logic_1;
    } else {
        y_TVALID_int = ap_const_logic_0;
    }
}

void abs_diff::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, y_TREADY_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img1_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img2_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_y_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_TREADY_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void abs_diff::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"y_TDATA\" :  \"" << y_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_TVALID\" :  \"" << y_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"y_TREADY\" :  \"" << y_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_TKEEP\" :  \"" << y_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_TSTRB\" :  \"" << y_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_TUSER\" :  \"" << y_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_TLAST\" :  \"" << y_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_TID\" :  \"" << y_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_TDEST\" :  \"" << y_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWVALID\" :  \"" << m_axi_c_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_AWREADY\" :  \"" << m_axi_c_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWADDR\" :  \"" << m_axi_c_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWID\" :  \"" << m_axi_c_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWLEN\" :  \"" << m_axi_c_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWSIZE\" :  \"" << m_axi_c_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWBURST\" :  \"" << m_axi_c_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWLOCK\" :  \"" << m_axi_c_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWCACHE\" :  \"" << m_axi_c_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWPROT\" :  \"" << m_axi_c_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWQOS\" :  \"" << m_axi_c_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWREGION\" :  \"" << m_axi_c_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_AWUSER\" :  \"" << m_axi_c_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_WVALID\" :  \"" << m_axi_c_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_WREADY\" :  \"" << m_axi_c_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_WDATA\" :  \"" << m_axi_c_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_WSTRB\" :  \"" << m_axi_c_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_WLAST\" :  \"" << m_axi_c_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_WID\" :  \"" << m_axi_c_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_WUSER\" :  \"" << m_axi_c_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARVALID\" :  \"" << m_axi_c_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_ARREADY\" :  \"" << m_axi_c_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARADDR\" :  \"" << m_axi_c_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARID\" :  \"" << m_axi_c_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARLEN\" :  \"" << m_axi_c_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARSIZE\" :  \"" << m_axi_c_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARBURST\" :  \"" << m_axi_c_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARLOCK\" :  \"" << m_axi_c_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARCACHE\" :  \"" << m_axi_c_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARPROT\" :  \"" << m_axi_c_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARQOS\" :  \"" << m_axi_c_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARREGION\" :  \"" << m_axi_c_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_ARUSER\" :  \"" << m_axi_c_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_RVALID\" :  \"" << m_axi_c_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_RREADY\" :  \"" << m_axi_c_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_RDATA\" :  \"" << m_axi_c_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_RLAST\" :  \"" << m_axi_c_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_RID\" :  \"" << m_axi_c_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_RUSER\" :  \"" << m_axi_c_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_RRESP\" :  \"" << m_axi_c_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_BVALID\" :  \"" << m_axi_c_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_c_BREADY\" :  \"" << m_axi_c_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_BRESP\" :  \"" << m_axi_c_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_BID\" :  \"" << m_axi_c_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_c_BUSER\" :  \"" << m_axi_c_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TDATA\" :  \"" << img1_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TVALID\" :  \"" << img1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img1_TREADY\" :  \"" << img1_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TKEEP\" :  \"" << img1_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TSTRB\" :  \"" << img1_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TUSER\" :  \"" << img1_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TLAST\" :  \"" << img1_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TID\" :  \"" << img1_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img1_TDEST\" :  \"" << img1_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TDATA\" :  \"" << img2_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TVALID\" :  \"" << img2_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img2_TREADY\" :  \"" << img2_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TKEEP\" :  \"" << img2_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TSTRB\" :  \"" << img2_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TUSER\" :  \"" << img2_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TLAST\" :  \"" << img2_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TID\" :  \"" << img2_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img2_TDEST\" :  \"" << img2_TDEST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

